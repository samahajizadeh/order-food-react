{"version":3,"sources":["pages/Login/LoginPage.module.scss","assets/images/logo.png","firebase.js","pages/Login/LoginPage.js"],"names":["module","exports","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","LoginPage","navigate","useNavigate","useState","showPassword","setShowPassword","useEffect","authToken","localStorage","getItem","console","log","useInput","value","includes","enteredEmail","emailChangeHandler","changeHandler","emailBlurHandler","blurHandler","emailIsValid","isValid","emailHasError","hasError","resetEmail","reset","trim","length","enteredPassword","passwordChangeHandler","passwordBlurHandler","psswordIsValid","passwordHasError","resetPassword","formIsValid","loginHandleSubmit","event","a","preventDefault","signInWithEmailAndPassword","response","setItem","_tokenResponse","refreshToken","cod","code","toast","error","className","classes","Row","Col","md","col","src","ImageLogo","alt","Form","noValidate","onSubmit","Group","controlId","Label","Control","type","invalid","placeholder","onChange","onBlur","required","InputGroup","icon","faEye","faEyeSlash","visiblePassword","onClick","Button","variant","disabled"],"mappings":"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","file":"static/js/10.e7ba1424.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-wrapper\":\"LoginPage_login-wrapper__3UZxV\",\"login-content\":\"LoginPage_login-content__2OsD6\",\"col\":\"LoginPage_col__2xXhm\",\"invalid\":\"LoginPage_invalid__3BPtP\",\"visiblePassword\":\"LoginPage_visiblePassword__1pEjp\",\"invalid-text\":\"LoginPage_invalid-text__2XKlm\",\"invalidInput\":\"LoginPage_invalidInput__259GM\"};","export default __webpack_public_path__ + \"static/media/logo.186257aa.png\";","// import { toast } from \"react-toastify\";\r\n\r\n// Import the functions you need from the SDKs you need\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth} from \"firebase/auth\";\r\n\r\n\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCP4P7XU29SFzjRcWaqaEZUiNBf9fEQ8nw\",\r\n  authDomain: \"order-food-project-cc48b.firebaseapp.com\",\r\n  databaseURL: \"https://order-food-project-cc48b-default-rtdb.firebaseio.com\",\r\n  projectId: \"order-food-project-cc48b\",\r\n  storageBucket: \"order-food-project-cc48b.appspot.com\",\r\n  messagingSenderId: \"827788556335\",\r\n  appId: \"1:827788556335:web:c6db8f9c864e1093962eda\",\r\n};\r\n\r\n// Initialize Firebase\r\n initializeApp(firebaseConfig);\r\nconst auth = getAuth();\r\n\r\nexport { auth  };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport classes from \"./LoginPage.module.scss\";\r\nimport ImageLogo from \"../../assets/images/logo.png\";\r\n\r\nimport useInput from \"../../hooks/useInput\";\r\n\r\nimport { auth } from \"../../firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const authToken = localStorage.getItem(\"Auth Token\");\r\n    if (authToken) {\r\n      navigate(\"/home\");\r\n    }\r\n    if (!authToken) {\r\n      navigate(\"/login\");\r\n    }\r\n\r\n    return()=>{console.log('cleanup')}\r\n  }, [navigate]);\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    changeHandler: emailChangeHandler,\r\n    blurHandler: emailBlurHandler,\r\n    isValid: emailIsValid,\r\n    hasError: emailHasError,\r\n    reset: resetEmail,\r\n  } = useInput((value) => value.includes(\"@\"));\r\n\r\n  const {\r\n    value: enteredPassword,\r\n    changeHandler: passwordChangeHandler,\r\n    blurHandler: passwordBlurHandler,\r\n    isValid: psswordIsValid,\r\n    hasError: passwordHasError,\r\n    reset: resetPassword,\r\n  } = useInput((value) => value.trim().length >= 7);\r\n\r\n  let formIsValid = false;\r\n  if (psswordIsValid && emailIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const loginHandleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await signInWithEmailAndPassword(\r\n        auth,\r\n        enteredEmail,\r\n        enteredPassword\r\n      );\r\n      localStorage.setItem(\"Auth Token\", response._tokenResponse.refreshToken);\r\n      navigate(\"/home\");\r\n    } catch (error) {\r\n      if (\r\n        error.cod === \"auth/wrong-password\" &&\r\n        error.code === \"auth/user-not-found\"\r\n      ) {\r\n        toast.error(\"نام کاربری و رمز عبور اشتباه است\");\r\n      }\r\n      if (error.code === \"auth/wrong-password\") {\r\n        toast.error(\"رمز عبور اشتباه است\");\r\n      }\r\n      if (error.code === \"auth/user-not-found\") {\r\n        toast.error(\"نام کاربری اشتباه است\");\r\n      }\r\n    }\r\n\r\n    resetEmail();\r\n    resetPassword();\r\n  };\r\n\r\n  const visiblePasswordHandler = () => {\r\n    setShowPassword(showPassword => !showPassword);\r\n  };\r\n\r\n  return (\r\n    <section className={classes[\"login-wrapper\"]}>\r\n      <Row className={classes[\"login-content\"]}>\r\n        <Col md={4} className={classes.col}>\r\n          <img className=\"login_icon\" src={ImageLogo} alt=\"login user\" />\r\n          <h3>ورود به حساب کاربری</h3>\r\n          <Form noValidate onSubmit={loginHandleSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n              <Form.Label>ایمیل</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={enteredEmail}\r\n                className={emailHasError ? classes.invalid : \"\"}\r\n                placeholder=\"ایمیل\"\r\n                onChange={emailChangeHandler}\r\n                onBlur={emailBlurHandler}\r\n                required\r\n              />\r\n              {emailHasError && (\r\n                <div className={classes[\"invalid-text\"]}>ایمیل نامعتبر است</div>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n              <Form.Label>رمز عبور</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  type={showPassword?'password':'text'}\r\n                  value={enteredPassword}\r\n                  className={passwordHasError ? classes.invalid : \"\"}\r\n                  placeholder=\"رمز عبور \"\r\n                  onChange={passwordChangeHandler}\r\n                  onBlur={passwordBlurHandler}\r\n                  required\r\n                />\r\n                <FontAwesomeIcon\r\n                  icon={showPassword ? faEye : faEyeSlash}\r\n                  className={classes.visiblePassword}\r\n                  onClick={visiblePasswordHandler}\r\n                />\r\n              </InputGroup>\r\n\r\n              {passwordHasError && (\r\n                <div className={classes[\"invalid-text\"]}>\r\n                  {\" \"}\r\n                  پسورد نباید کمتر از 7 کاراکتر باشد\r\n                </div>\r\n              )}\r\n            </Form.Group>\r\n            {/* <Button variant=\"light\" type=\"submit\" disabled={!validated}> */}\r\n            <Button variant=\"light\" type=\"submit\" disabled={!formIsValid}>\r\n              ورود\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}